--- /dev/null	2023-04-26 08:35:49.927465383 -0700
+++ b/board/xilinx/zynqmp/t0-crs.env	2023-05-11 17:18:00.881329461 -0700
@@ -0,0 +1,36 @@
+bootcmd=
+	while true; do /* top-level loop - keep repeating until it works */
+
+		/* Loop until we know if we're DHCP or MMC booting. This relies on the
+		 * following files:
+		 * - For MMC, "Image" in the FAT partition
+		 * - For DHCP, "t0.technology-CRS/Image"
+		 * in the TFTP root ...and also loads them into the correct spot for
+		 * the kernel. */
+		setenv mmcdev mmc 0;
+		while test -z "${fetch}"; do
+			if ext2load ${mmcdev} ${kernel_addr_r} /boot/Image; then
+				echo Proceeding via MMC0;
+				setenv fetch ext2load ${mmcdev};
+				setenv path_prefix /boot;
+				setenv bootargs "earlycon console=ttyPS0,115200 ip=dhcp ro rootwait root=/dev/mmcblk0";
+			else
+				if dhcp ${kernel_addr_r} t0-crs/Image; then
+					echo Proceeding via DHCP;
+					setenv fetch dhcp;
+					setenv path_prefix t0-crs;
+					setenv bootargs "earlycon console=ttyPS0,115200 ip=dhcp ro rootwait root=/dev/nfs nfsroot=${serverip}:/srv/nfs/${path_prefix},tcp,v3";
+				fi;
+			fi;
+			sleep 1;
+		done;
+
+		/* Fetch the device tree */
+		${fetch} ${fdt_addr_r} ${path_prefix}/${board_manufacturer}-${board_name}-rev${board_rev}.dtb;
+		fdt addr ${fdt_addr_r} ${fdt_size_r};
+
+		/* Now boot the kernel, which we have already loaded */
+		fdt set /chosen bootargs ${bootargs};
+		booti ${kernel_addr_r} - ${fdt_addr_r};
+
+		done
